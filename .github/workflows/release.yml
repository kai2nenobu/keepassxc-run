name: Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

defaults:
  run:
    shell: bash

jobs:
  build:
    name: Build a package
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - name: Setup Python
        uses: actions/setup-python@v6
      - name: Install uv
        uses: astral-sh/setup-uv@v7
      - name: Build
        run: uv build
      - name: Archive a package
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: dist/
  publish:
    name: Publish a package to PyPI
    runs-on: ubuntu-24.04
    needs: [build]
    if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
    environment:
      name: pypi
      url: https://pypi.org/project/keepassxc-run/
    permissions:
      id-token: write # mandatory for trusted publishing
    steps:
      - uses: actions/download-artifact@v5
        with:
          name: package
          path: dist/
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
  pyinstaller:
    needs: [build]
    runs-on: "${{ matrix.OS }}"
    permissions:
      contents: write
    strategy:
      matrix:
        OS: [ubuntu-24.04, windows-2022, macos-14]
      fail-fast: false
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
      - name: Install uv
        uses: astral-sh/setup-uv@v7
      - name: Build a single executable & archive
        run: make build-exe archive-exe
      - name: Run executable
        run: ./dist/keepassxc-run --help
      - uses: actions/upload-artifact@v4
        with:
          name: "pyinstaller-${{ matrix.OS }}"
          path: ./archive/
      - name: Upload an archive as release assets
        if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
        run: make upload-archive
        env:
          TAG_NAME: ${{ github.event.release.tag_name }}
          GITHUB_TOKEN: ${{ secrets.github_token }}
  chocolatey:
    needs: [pyinstaller]
    runs-on: windows-2022
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
      - name: Install uv
        uses: astral-sh/setup-uv@v7
      - uses: actions/download-artifact@v5
        with:
          name: "pyinstaller-windows-2022"
          path: ./archive/
      - name: Construct chocolatey package
        run: uv run ci/construct-chocolatey-package.py --archive archive/keepassxc-run_Windows_x86_64.zip --output-dir dist/chocolatey
      - run: choco pack
        working-directory: dist/chocolatey
      - uses: actions/upload-artifact@v4
        with:
          name: nupkg
          path: dist/chocolatey/*.nupkg
      - name: Publish chocolatey package
        if: ${{ github.event_name == 'release' && github.event.action == 'published' }}
        run: choco push --source 'https://push.chocolatey.org' --api-key "$CHOCOLATEY_API_KEY"
        working-directory: dist/chocolatey
        env:
          CHOCOLATEY_API_KEY: ${{ secrets.CHOCOLATEY_API_KEY }}
